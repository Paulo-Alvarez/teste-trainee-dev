{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TodoComponent = class TodoComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todos = [];\n    this.showCompletedTasks = true;\n  }\n  ngOnInit() {\n    this.loadTodos();\n  }\n  loadTodos() {\n    this.todoService.getTodos().subscribe(todos => {\n      this.todos = todos;\n    });\n  }\n  addTodo(newTodoTitle) {\n    const newTodo = {\n      id: this.todos.length + 1,\n      title: newTodoTitle,\n      completed: false\n    };\n    this.todoService.addTodo(newTodo);\n  }\n  updateTodo(updatedTodo) {\n    this.todoService.updateTodo(updatedTodo);\n  }\n  deleteTodo(todoId) {\n    this.todoService.deleteTodo(todoId);\n  }\n  clearAll() {\n    if (this.todos.length > 0 && confirm('Are you sure you want to clear all tasks?')) {\n      this.todoService.clearAll();\n      this.loadTodos();\n    }\n  }\n  clearCompletedTasks() {\n    this.todoService.clearCompletedTasks();\n    this.loadTodos();\n  }\n  toggleCompletedTasks() {\n    this.showCompletedTasks = !this.showCompletedTasks;\n    this.loadTodos();\n    this.todos = this.filteredTodos();\n  }\n  filteredTodos() {\n    return this.showCompletedTasks ? this.todos : this.todos.filter(todo => !todo.completed);\n  }\n  get labelClearAll() {\n    return 'Limpar Todas as Tarefas';\n  }\n};\nTodoComponent = __decorate([Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})], TodoComponent);","map":{"version":3,"names":["Component","TodoComponent","constructor","todoService","todos","showCompletedTasks","ngOnInit","loadTodos","getTodos","subscribe","addTodo","newTodoTitle","newTodo","id","length","title","completed","updateTodo","updatedTodo","deleteTodo","todoId","clearAll","confirm","clearCompletedTasks","toggleCompletedTasks","filteredTodos","filter","todo","labelClearAll","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\palva\\Desktop\\teste-trainee-dev\\src\\app\\todo\\todo.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Todo } from '../shared/models/todo.model';\r\nimport { TodoService } from '../shared/services/todo.service';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.css']\r\n})\r\nexport class TodoComponent implements OnInit {\r\n  todos: Todo[] = [];\r\n  showCompletedTasks: boolean = true;\r\n\r\n  constructor(private todoService: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTodos();\r\n  }\r\n\r\n  loadTodos() {\r\n    this.todoService.getTodos().subscribe(todos => {\r\n      this.todos = todos;\r\n    });\r\n  }\r\n\r\n  addTodo(newTodoTitle: string) {\r\n    const newTodo: Todo = {\r\n      id: this.todos.length + 1,\r\n      title: newTodoTitle,\r\n      completed: false\r\n    };\r\n\r\n    this.todoService.addTodo(newTodo);\r\n  }\r\n\r\n  updateTodo(updatedTodo: Todo) {\r\n    this.todoService.updateTodo(updatedTodo);\r\n  }\r\n\r\n  deleteTodo(todoId: number) {\r\n    this.todoService.deleteTodo(todoId);\r\n  }\r\n\r\n  clearAll() {\r\n    if (this.todos.length > 0 && confirm('Are you sure you want to clear all tasks?')) {\r\n      this.todoService.clearAll();\r\n      this.loadTodos();\r\n    }\r\n  }\r\n\r\n  clearCompletedTasks() {\r\n    this.todoService.clearCompletedTasks();\r\n    this.loadTodos();\r\n  }\r\n\r\n  toggleCompletedTasks() {\r\n    this.showCompletedTasks = !this.showCompletedTasks;\r\n    this.loadTodos();\r\n    this.todos = this.filteredTodos();\r\n  }\r\n\r\n  filteredTodos() {\r\n    return this.showCompletedTasks ? this.todos : this.todos.filter(todo => !todo.completed);\r\n  }\r\n\r\n  get labelClearAll(){\r\n    return 'Limpar Todas as Tarefas'\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,kBAAkB,GAAY,IAAI;EAEc;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACC,SAAS,CAACL,KAAK,IAAG;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAM,OAAOA,CAACC,YAAoB;IAC1B,MAAMC,OAAO,GAAS;MACpBC,EAAE,EAAE,IAAI,CAACT,KAAK,CAACU,MAAM,GAAG,CAAC;MACzBC,KAAK,EAAEJ,YAAY;MACnBK,SAAS,EAAE;KACZ;IAED,IAAI,CAACb,WAAW,CAACO,OAAO,CAACE,OAAO,CAAC;EACnC;EAEAK,UAAUA,CAACC,WAAiB;IAC1B,IAAI,CAACf,WAAW,CAACc,UAAU,CAACC,WAAW,CAAC;EAC1C;EAEAC,UAAUA,CAACC,MAAc;IACvB,IAAI,CAACjB,WAAW,CAACgB,UAAU,CAACC,MAAM,CAAC;EACrC;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACjB,KAAK,CAACU,MAAM,GAAG,CAAC,IAAIQ,OAAO,CAAC,2CAA2C,CAAC,EAAE;MACjF,IAAI,CAACnB,WAAW,CAACkB,QAAQ,EAAE;MAC3B,IAAI,CAACd,SAAS,EAAE;;EAEpB;EAEAgB,mBAAmBA,CAAA;IACjB,IAAI,CAACpB,WAAW,CAACoB,mBAAmB,EAAE;IACtC,IAAI,CAAChB,SAAS,EAAE;EAClB;EAEAiB,oBAAoBA,CAAA;IAClB,IAAI,CAACnB,kBAAkB,GAAG,CAAC,IAAI,CAACA,kBAAkB;IAClD,IAAI,CAACE,SAAS,EAAE;IAChB,IAAI,CAACH,KAAK,GAAG,IAAI,CAACqB,aAAa,EAAE;EACnC;EAEAA,aAAaA,CAAA;IACX,OAAO,IAAI,CAACpB,kBAAkB,GAAG,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACsB,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACX,SAAS,CAAC;EAC1F;EAEA,IAAIY,aAAaA,CAAA;IACf,OAAO,yBAAyB;EAClC;CACD;AA3DY3B,aAAa,GAAA4B,UAAA,EALzB7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW/B,aAAa,CA2DzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}