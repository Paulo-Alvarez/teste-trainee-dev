{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./todo-item/todo-item.component\";\nfunction TodoComponent_app_todo_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-todo-item\", 10);\n    i0.ɵɵlistener(\"editTodo\", function TodoComponent_app_todo_item_14_Template_app_todo_item_editTodo_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editarTodo($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"todo\", todo_r1);\n  }\n}\nexport class TodoComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todos = [];\n    this.showCompletedTasks = true;\n    this.todoEditando = null;\n    this.tituloInput = '';\n  }\n  ngOnInit() {\n    this.loadTodos();\n  }\n  loadTodos() {\n    this.todoService.getTodos().subscribe(todos => {\n      this.todos = todos;\n    });\n  }\n  addTodo(newTodoTitle) {\n    const newTodo = {\n      id: this.todos.length + 1,\n      title: newTodoTitle,\n      completed: false\n    };\n    this.todoService.addTodo(newTodo);\n    this.loadTodos();\n  }\n  updateTodo(updatedTodo) {\n    this.todoService.updateTodo(updatedTodo);\n    this.loadTodos();\n  }\n  deleteTodo(todoId) {\n    this.todoService.deleteTodo(todoId);\n    this.loadTodos();\n  }\n  clearAll() {\n    if (this.todos.length > 0 && confirm('Are you sure you want to clear all tasks?')) {\n      this.todoService.clearAll();\n      this.loadTodos();\n    }\n  }\n  clearCompletedTasks() {\n    if (confirm('Tem certeza de que deseja limpar as tarefas concluídas?')) {\n      this.todoService.clearCompletedTasks();\n      this.loadTodos();\n    }\n  }\n  toggleCompletedTasks() {\n    this.showCompletedTasks = !this.showCompletedTasks;\n    this.loadTodos();\n    this.todos = this.filteredTodos();\n  }\n  filteredTodos() {\n    return this.showCompletedTasks ? this.todos : this.todos.filter(todo => !todo.completed);\n  }\n  get labelClearAll() {\n    return 'Limpar Todas as Tarefas';\n  }\n  editarTodo(todo) {\n    this.todoEditando = todo;\n    this.tituloInput = todo.title;\n  }\n  salvarTodo() {\n    const titulo = this.tituloInput.trim();\n    if (!titulo) return;\n    if (this.todoEditando) {\n      const updatedTodo = {\n        ...this.todoEditando,\n        title: titulo\n      };\n      this.updateTodo(updatedTodo);\n      this.todoEditando = null;\n    } else {\n      this.addTodo(titulo);\n    }\n    this.tituloInput = '';\n  }\n}\n_class = TodoComponent;\n_class.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-todo\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[1, \"todo-container\"], [1, \"todo-form\"], [\"type\", \"text\", \"placeholder\", \"Digite a tarefa\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"todo-buttons\"], [1, \"toggle-button\", 3, \"click\"], [3, \"innerHTML\", \"click\"], [1, \"todo-list_container\"], [1, \"todo-list_todo\"], [3, \"todo\", \"editTodo\", 4, \"ngFor\", \"ngForOf\"], [3, \"todo\", \"editTodo\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 1)(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.tituloInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_4_listener() {\n        return ctx.salvarTodo();\n      });\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_7_listener() {\n        return ctx.toggleCompletedTasks();\n      });\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_9_listener() {\n        return ctx.clearCompletedTasks();\n      });\n      i0.ɵɵtext(10, \"Limpar Tarefas Conclu\\u00EDdas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_11_listener() {\n        return ctx.clearAll();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8);\n      i0.ɵɵtemplate(14, TodoComponent_app_todo_item_14_Template, 1, 1, \"app-todo-item\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.tituloInput);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.todoEditando ? \"Salvar\" : \"Adicionar\", \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.showCompletedTasks ? \"Ocultar Tarefas Conclu\\u00EDdas\" : \"Exibir Tarefas Conclu\\u00EDdas\", \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"innerHTML\", ctx.labelClearAll, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.TodoItemComponent],\n  styles: [\".todo-container[_ngcontent-%COMP%] {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  width: 100%;\\n}\\n\\n.todo-list_container[_ngcontent-%COMP%] {\\n  background: #ffffff;\\n  border-radius: 1.25rem;\\n  border: 1px solid #E9EDF7;\\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\\n  height: 60vh;\\n  margin-top: 0.5rem;\\n  max-width: 51.5rem;\\n  padding: 2.5rem;\\n  width: 80vw;\\n  overflow-y: hidden;\\n}\\n\\n.todo-list_todo[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.5rem;\\n}\\n\\n.todo-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  margin-top: 0.8rem;\\n  justify-content: flex-end;\\n  align-items: center;\\n  gap: 1.5rem;\\n  margin-right: 5rem;\\n  flex-wrap: wrap;\\n}\\n\\n.toggle-button[_ngcontent-%COMP%] {\\n  width: 13rem;\\n}\\n\\n.todo-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  border: none;\\n  font-weight: 700;\\n  cursor: pointer;\\n  color: #413F3F;\\n  border:  1px solid #413F3F;\\n  padding: 0 0.5rem;\\n  box-shadow: 1px 1px;\\n  border-radius: 0.2rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdG9kby90b2RvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsV0FBVztBQUNiOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLHNCQUFzQjtFQUN0Qix5QkFBeUI7RUFDekIsK0NBQStDO0VBQy9DLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixjQUFjO0VBQ2QsMEJBQTBCO0VBQzFCLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIscUJBQXFCO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLnRvZG8tY29udGFpbmVyIHtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnRvZG8tbGlzdF9jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMS4yNXJlbTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjRTlFREY3O1xyXG4gIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xyXG4gIGhlaWdodDogNjB2aDtcclxuICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgbWF4LXdpZHRoOiA1MS41cmVtO1xyXG4gIHBhZGRpbmc6IDIuNXJlbTtcclxuICB3aWR0aDogODB2dztcclxuICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbn1cclxuXHJcbi50b2RvLWxpc3RfdG9kbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMC41cmVtO1xyXG59XHJcblxyXG4udG9kby1idXR0b25zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDAuOHJlbTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiAxLjVyZW07XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cmVtO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnRvZ2dsZS1idXR0b24ge1xyXG4gIHdpZHRoOiAxM3JlbTtcclxufVxyXG5cclxuLnRvZG8tYnV0dG9ucyBidXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBjb2xvcjogIzQxM0YzRjtcclxuICBib3JkZXI6ICAxcHggc29saWQgIzQxM0YzRjtcclxuICBwYWRkaW5nOiAwIDAuNXJlbTtcclxuICBib3gtc2hhZG93OiAxcHggMXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TodoComponent_app_todo_item_14_Template_app_todo_item_editTodo_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","editarTodo","ɵɵelementEnd","ɵɵproperty","todo_r1","TodoComponent","constructor","todoService","todos","showCompletedTasks","todoEditando","tituloInput","ngOnInit","loadTodos","getTodos","subscribe","addTodo","newTodoTitle","newTodo","id","length","title","completed","updateTodo","updatedTodo","deleteTodo","todoId","clearAll","confirm","clearCompletedTasks","toggleCompletedTasks","filteredTodos","filter","todo","labelClearAll","salvarTodo","titulo","trim","ɵɵdirectiveInject","i1","TodoService","selectors","decls","vars","consts","template","TodoComponent_Template","rf","ctx","TodoComponent_Template_input_ngModelChange_3_listener","TodoComponent_Template_button_click_4_listener","ɵɵtext","TodoComponent_Template_button_click_7_listener","TodoComponent_Template_button_click_9_listener","TodoComponent_Template_button_click_11_listener","ɵɵtemplate","TodoComponent_app_todo_item_14_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵsanitizeHtml"],"sources":["C:\\Users\\palva\\Desktop\\teste-trainee-dev\\src\\app\\todo\\todo.component.ts","C:\\Users\\palva\\Desktop\\teste-trainee-dev\\src\\app\\todo\\todo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Todo } from '../shared/models/todo.model';\r\nimport { TodoService } from '../shared/services/todo.service';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.css']\r\n})\r\nexport class TodoComponent implements OnInit {\r\n  todos: Todo[] = [];\r\n  showCompletedTasks: boolean = true;\r\n\r\n  todoEditando: Todo | null = null;\r\n  tituloInput: string = '';\r\n\r\n  constructor(private todoService: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTodos();\r\n  }\r\n\r\n  loadTodos() {\r\n    this.todoService.getTodos().subscribe(todos => {\r\n      this.todos = todos;\r\n    });\r\n  }\r\n\r\n  addTodo(newTodoTitle: string) {\r\n    const newTodo: Todo = {\r\n      id: this.todos.length + 1,\r\n      title: newTodoTitle,\r\n      completed: false\r\n    };\r\n\r\n    this.todoService.addTodo(newTodo);\r\n    this.loadTodos();\r\n  }\r\n\r\n  updateTodo(updatedTodo: Todo) {\r\n    this.todoService.updateTodo(updatedTodo);\r\n    this.loadTodos();\r\n  }\r\n\r\n  deleteTodo(todoId: number) {\r\n    this.todoService.deleteTodo(todoId);\r\n    this.loadTodos();\r\n  }\r\n\r\n  clearAll() {\r\n    if (this.todos.length > 0 && confirm('Are you sure you want to clear all tasks?')) {\r\n      this.todoService.clearAll();\r\n      this.loadTodos();\r\n    }\r\n  }\r\n\r\n  clearCompletedTasks() {\r\n    if (confirm('Tem certeza de que deseja limpar as tarefas concluídas?')) {\r\n      this.todoService.clearCompletedTasks();\r\n      this.loadTodos();\r\n    }\r\n  }\r\n\r\n  toggleCompletedTasks() {\r\n    this.showCompletedTasks = !this.showCompletedTasks;\r\n    this.loadTodos();\r\n    this.todos = this.filteredTodos();\r\n  }\r\n\r\n  filteredTodos() {\r\n    return this.showCompletedTasks ? this.todos : this.todos.filter(todo => !todo.completed);\r\n  }\r\n\r\n  get labelClearAll(){\r\n    return 'Limpar Todas as Tarefas'\r\n  }\r\n\r\n  editarTodo(todo: Todo) {\r\n    this.todoEditando = todo;\r\n    this.tituloInput = todo.title;\r\n  }\r\n\r\n  salvarTodo() {\r\n    const titulo = this.tituloInput.trim();\r\n    if (!titulo) return; \r\n\r\n    if (this.todoEditando) {\r\n      const updatedTodo = { ...this.todoEditando, title: titulo };\r\n      this.updateTodo(updatedTodo);\r\n      this.todoEditando = null;\r\n    } else {\r\n      this.addTodo(titulo);\r\n    }\r\n\r\n    this.tituloInput = '';\r\n  }\r\n}\r\n","<div class=\"todo-container\">\r\n  <div class=\"todo-form\">\r\n    <div class=\"todo-form\">\r\n  <input \r\n    type=\"text\" \r\n    [(ngModel)]=\"tituloInput\" \r\n    placeholder=\"Digite a tarefa\"\r\n  />\r\n  <button (click)=\"salvarTodo()\">\r\n    {{ todoEditando ? 'Salvar' : 'Adicionar' }}\r\n  </button>\r\n</div>\r\n  </div>\r\n\r\n  <div class=\"todo-buttons\">\r\n    <button class=\"toggle-button\" (click)=\"toggleCompletedTasks()\">\r\n      {{ showCompletedTasks ? 'Ocultar Tarefas Concluídas' : 'Exibir Tarefas Concluídas' }}\r\n    </button>\r\n    <button (click)=\"clearCompletedTasks()\">Limpar Tarefas Concluídas</button>\r\n    <button (click)=\"clearAll()\" [innerHTML]=\"labelClearAll\"></button>\r\n  </div>\r\n\r\n  <div class=\"todo-list_container\">\r\n    <div class=\"todo-list_todo\">\r\n      <app-todo-item\r\n        *ngFor=\"let todo of todos\"\r\n        [todo]=\"todo\"\r\n        (editTodo)=\"editarTodo($event)\"\r\n      ></app-todo-item>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}